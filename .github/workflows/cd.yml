# .github/workflows/cd-pipeline.yml
name: CD Pipeline

on:
  push:
    branches: [ master ]
    paths:
      - 'archive-admin/**'
      - 'archive-client/**'
      - 'cortex/**'

jobs:
  detect-changes:
    runs-on: ubuntu-latest
    outputs:
      archive-admin: ${{ steps.filter.outputs.archive-admin }}
      archive-client: ${{ steps.filter.outputs.archive-client }}
      cortex: ${{ steps.filter.outputs.cortex }}
    steps:
      - uses: actions/checkout@v4
      - id: filter
        uses: dorny/paths-filter@v3
        with:
          filters: |
            archive-admin:
              - 'archive-admin/**'
            archive-client:
              - 'archive-client/**'
            cortex:
              - 'cortex/**'

  build-and-deploy:
    needs: detect-changes
    runs-on: ubuntu-latest
    strategy:
      matrix:
        service: [ archive-admin, archive-client, cortex ]

    steps:
      - uses: actions/checkout@v4

      - name: Setup Docker Buildx
        uses: docker/setup-buildx-action@v3

      - name: Login to GHCR
        uses: docker/login-action@v3
        with:
          registry: ghcr.io
          username: ${{ github.actor }}
          password: ${{ secrets.GITHUB_TOKEN }}

      - name: Build & Push Docker image
        if: ${{ needs.detect-changes.outputs[matrix.service] == 'true' }}
        run: |
          IMAGE=ghcr.io/nesohq/bgce-archive/${{ matrix.service }}:${{ github.sha }}
          echo "Building and pushing $IMAGE"
          docker build -t $IMAGE ./${{ matrix.service }}
          docker push $IMAGE
          echo "IMAGE=$IMAGE" >> $GITHUB_ENV

      # At the moment the infra operation is a no-op since we don't have infra as code
      # This is a placeholder for future infra updates
      - name: Clone infra repo
        if: ${{ needs.detect-changes.outputs[matrix.service] == 'true' }}
        uses: actions/checkout@v4
        with:
          repository: managed-ops-preps/infra
          token: ${{ secrets.GITHUB_TOKEN }}
          path: infra

      - name: Install yq
        if: ${{ needs.detect-changes.outputs[matrix.service] == 'true' }}
        run: sudo apt-get install -y yq

      - name: Update service deployment in infra
        if: ${{ needs.detect-changes.outputs[matrix.service] == 'true' }}
        run: |
          cd infra
          mkdir -p k8s
          FILE=k8s/${{ matrix.service }}.yaml
          if [ -f "$FILE" ]; then
            echo "Updating existing $FILE"
            yq e -i ".spec.template.spec.containers[0].image = env.IMAGE" $FILE
          else
            echo "Creating new $FILE"
            cat <<EOF > $FILE
          apiVersion: apps/v1
          kind: Deployment
          metadata:
            name: ${{ matrix.service }}
          spec:
            replicas: 1
            selector:
              matchLabels:
                app: ${{ matrix.service }}
            template:
              metadata:
                labels:
                  app: ${{ matrix.service }}
              spec:
                containers:
                  - name: ${{ matrix.service }}
                    image: $IMAGE
          EOF
                    fi
