# .github/workflows/cd.yml
name: CD Pipeline

on:
  push:
    branches: [ master ]
    paths:
      - 'archive-admin/**'
      - 'archive-client/**'
      - 'cortex/**'

jobs:
  detect-changes:
    runs-on: ubuntu-latest
    outputs:
      changed-services: ${{ steps.filter.outputs.services }}
    steps:
      - name: Checkout repo
        uses: actions/checkout@v4

      - id: filter
        uses: dorny/paths-filter@v3
        with:
          filters: |
            archive-admin:
              - 'archive-admin/**'
            archive-client:
              - 'archive-client/**'
            cortex:
              - 'cortex/**'

  build-and-deploy:
    needs: detect-changes
    runs-on: ubuntu-latest
    strategy:
      matrix:
        service: [ archive-admin, archive-client, cortex ]
    steps:
      - name: Checkout repo
        uses: actions/checkout@v4

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3

      - name: Log in to GitHub Container Registry
        uses: docker/login-action@v3
        with:
          registry: ghcr.io
          username: ${{ github.actor }}
          password: ${{ secrets.GITHUB_TOKEN }}

      - name: Build & Push Docker image
        if: ${{ contains(needs.detect-changes.outputs.changed-services, matrix.service) }}
        run: |
          IMAGE=ghcr.io/${{ github.repository_owner }}/${{ matrix.service }}:${{ github.sha }}
          echo "Building and pushing image for ${{ matrix.service }} -> $IMAGE"
          docker build -t $IMAGE ./${{ matrix.service }}
          docker push $IMAGE
          echo "IMAGE=$IMAGE" >> $GITHUB_ENV

      - name: Clone infra repo
        if: ${{ contains(needs.detect-changes.outputs.changed-services, matrix.service) }}
        uses: actions/checkout@v4
        with:
          repository: managed-ops-preps/infra
          token: ${{ secrets.GITHUB_TOKEN }}
          path: infra

      - name: Install yq
        if: ${{ contains(needs.detect-changes.outputs.changed-services, matrix.service) }}
        run: sudo apt-get install -y yq

      - name: Update service deployment in infra
        if: ${{ contains(needs.detect-changes.outputs.changed-services, matrix.service) }}
        run: |
          cd infra
          mkdir -p k8s

          # Update existing manifest or create a dummy one
          FILE=k8s/${{ matrix.service }}.yaml
          if [ -f "$FILE" ]; then
            yq e -i ".spec.template.spec.containers[0].image = env.IMAGE" $FILE
          else
          cat <<EOF > $FILE
          spec:
            template:
              spec:
                containers:
                  - name: ${{ matrix.service }}
                    image: $IMAGE
          EOF

