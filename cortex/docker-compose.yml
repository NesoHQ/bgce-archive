name: cortex
services:
  bgce_cortex:
    image: cortex:local
    container_name: bgce-cortex
    build:
      context: .
    ports:
      - "5000:80"
    environment:
      VERSION: 1.0.0
      MODE: debug
      SERVICE_NAME: cortex
      HTTP_PORT: 80
      MIGRATION_SOURCE: migrations
      JWT_SECRET: anything-secret

      # APM Configuration
      APM_SERVICE_NAME:
      APM_SERVER_URL:
      APM_SECRET_TOKEN:
      APM_ENVIRONMENT:

      # RabbitMQ
      RABBITMQ_URL: "amqp://admin:admin@rabbitmq:5672"
      RMQ_RECONNECT_DELAY: 5
      RMQ_RETRY_INTERVAL: 600
      RMQ_QUEUE_PREFIX: cortex-dev

      # Redis
      READ_REDIS_URL: "redis://redis:6379"
      WRITE_REDIS_URL: "redis://redis:6379"

      # Read cortex DB
      READ_BGCE_DB_HOST: postgres
      READ_BGCE_DB_PORT: 5432
      READ_BGCE_DB_NAME: bgce
      READ_BGCE_DB_USER: postgres
      READ_BGCE_DB_PASSWORD: postgres
      READ_BGCE_DB_MAX_IDLE_TIME_IN_MINUTES: 60
      READ_BGCE_DB_MAX_OPEN_CONNS: 25
      READ_BGCE_DB_MAX_IDLE_CONNS: 25
      READ_BGCE_DB_ENABLE_SSL_MODE: false

      # Write cortex DB
      WRITE_BGCE_DB_HOST: postgres
      WRITE_BGCE_DB_PORT: 5432
      WRITE_BGCE_DB_NAME: bgce
      WRITE_BGCE_DB_USER: postgres
      WRITE_BGCE_DB_PASSWORD: postgres
      WRITE_BGCE_DB_MAX_IDLE_TIME_IN_MINUTES: 60
      WRITE_BGCE_DB_MAX_OPEN_CONNS: 25
      WRITE_BGCE_DB_MAX_IDLE_CONNS: 25
      WRITE_BGCE_DB_ENABLE_SSL_MODE: false

      # Required DB configuration ..

      BGCE_DB_DSN: "postgres://postgres:postgres@postgres:5432/bgce?sslmode=disable"
      BGCE_DB_DRIVER: "postgres"
    depends_on:
      postgres:
        condition: service_healthy
      rabbitmq:
        condition: service_healthy
      redis:
        condition: service_healthy

  postgres:
    image: postgres:15
    container_name: bgce-postgres
    environment:
      POSTGRES_DB: bgce
      POSTGRES_USER: postgres
      POSTGRES_PASSWORD: postgres
    ports:
      - "5432:5432"
    volumes:
      - postgres_data:/var/lib/postgresql/data
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U postgres"]
      interval: 10s
      timeout: 5s
      retries: 5

  rabbitmq:
    image: rabbitmq:3-management
    container_name: bgce-rabbitmq
    environment:
      RABBITMQ_DEFAULT_USER: admin
      RABBITMQ_DEFAULT_PASS: admin
    ports:
      - "5672:5672"
      - "15672:15672"
    volumes:
      - rabbitmq_data:/var/lib/rabbitmq
    healthcheck:
      test: ["CMD", "rabbitmq-diagnostics", "ping"]
      interval: 10s
      timeout: 5s
      retries: 5

  redis:
    image: redis:7-alpine
    container_name: bgce-redis
    ports:
      - "6379:6379"
    volumes:
      - redis_data:/data
    healthcheck:
      test: ["CMD", "redis-cli", "ping"]
      interval: 10s
      timeout: 5s
      retries: 5

volumes:
  postgres_data:
  rabbitmq_data:
  redis_data:

